<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <!--
      基于xml的方式实现servlet配置
        1 配置servlet标签和servlet-mapping标签
        2 servlet的servlet标签和servlet-mapping标签的servlet-name必须一致

      -->
    <servlet>
        <!--    servlet-name的名字一般为Servlet类名的首字母小写    -->
        <servlet-name>helloWorldServlet</servlet-name>
        <!--    servlet的全路径名    -->
        <servlet-class>cn.raphuscucullatus.java.web.foundational.servlet.HelloWorldServlet</servlet-class>
        <!--    配置Servlet的初始化参数    -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>applicationContext.xml</param-value>
        </init-param>
        <!--    服务器启动的时候创建Servlet对象  优先级为1    -->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>helloWorldServlet</servlet-name>
        <!--    配置客户端访问映射路径,以 / 开头,如:   /helloworld  -->
        <url-pattern>/helloworld</url-pattern>
    </servlet-mapping>

    <!-- 图形验证码servlet -->
    <servlet>
        <servlet-name>CaptchaServlet</servlet-name>
        <servlet-class>com.wf.captcha.servlet.CaptchaServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>CaptchaServlet</servlet-name>
        <url-pattern>/captcha</url-pattern>
    </servlet-mapping>

    <!--
         xml配置filter
          根据filter-mapping的url-patten对应路径拦截客户端请求，
          然后根据filter-mapping的filter-name找到相应的filter的filter-name，
          然后会执行filter-class对应的LoginFilter的doFilter方法
          -->
    <filter>
        <filter-name>loginFilter</filter-name>
        <filter-class>cn.raphuscucullatus.java.web.foundational.filter.LoginFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>loginFilter</filter-name>
        <url-pattern>/login</url-pattern>
    </filter-mapping>
    <!--    XML配置方式dispatchTypes    -->
    <!--    <filter>-->
    <!--        <filter-name>dispatchTypesFilter</filter-name>-->
    <!--        <filter-class>cn.raphuscucullatus.java.web.foundational.filter.DispatchTypesFilter</filter-class>-->
    <!--    </filter>-->
    <!--    <filter-mapping>-->
    <!--        <filter-name>dispatchTypesFilter</filter-name>-->
    <!--        <url-pattern>/request/*</url-pattern>-->
    <!--        <dispatcher>REQUEST</dispatcher>-->
    <!--        <dispatcher>FORWARD</dispatcher>-->
    <!--    </filter-mapping>-->
    <!--    <filter>-->
    <!--        <filter-name>characterEncodingFilter</filter-name>-->
    <!--        <filter-class>cn.raphuscucullatus.java.web.foundational.filter.CharacterEncodingFilter</filter-class>-->
    <!--    </filter>-->
    <!--    <filter-mapping>-->
    <!--        <filter-name>characterEncodingFilter</filter-name>-->
    <!--        <url-pattern>/*</url-pattern>-->
    <!--    </filter-mapping>-->

    <!--    使用XML配置Listener  -->
    <!--    <listener>-->
    <!--        <listener-class>cn.raphuscucullatus.java.web.foundational.listener.ContextLoaderListener</listener-class>-->
    <!--    </listener>-->
</web-app>

